우선 벡터에 시작점과 도착점 정보들을 전부 입력 받은 후
시작점을 기준으로 오름차순 정렬해준다.
이후 start, end 변수에 제일 첫 번째 벡터에 있는 시작점과 도착점 정보를 넣어준다.
다음부터는 1부터 N-1까지 반복문을 돌리며 특정 조건에 따라 start와 end값을 갱신해가며 답을 구한다.

조건은 다음과 같다.
1. 현재 벡터에 저장되어있는 시작점이 end값보다 작다면 end값은 기존의 end값과 v[i].second 중 큰 값으로 채택한다.
2. end 값보다 v[i].first가 크다면, 줄이 이어지는 것이 아니라 중간에 끊겼다가 뒤에 다시 긋는 상황이므로
   answer에 end-start 값을 더해준 뒤 start와 end를 v[i]에 저장되어있는 값으로 바꾼다.

처음 풀 땐, 1번 조건에서 end값을 갱신할 때 end값과 v[i].second 중 큰 값이 아닌, 그냥 v[i].second값으로 변환해주기만해서 틀렸었다.
