처음 문제를 보자마자 생각난 방법은 DFS를 통해 계속 돌려가며 브루트포스로 해결하는 것이었고 생각한 대로 구현했으나 틀렸다.
제출해 볼 것도 없이 visual studio 컴파일에서부터 답이 나오지 않아 꽤 오래 붙잡고 있었다

구글링을 통해 다른 사람들의 해결 방법을 찾아보았고, 단순히 4중 for문을 통해 해결했다는 문구를 보고 다시 구현을 시작했다.

행과 열이 등차수열을 이루고 있어야 하므로 그걸 체크하는 2중 for문과 
현재 위치 파악을 위한 2중 for문이 필요하겠다고 생각했다

행과 열을 확인하기 위한 2중 for문은 둥차가 음수일 수도 있으므로 -N부터 N까지,  -M부터 M까지 반복하게끔 했고
등차가 행 열 둘 다 0일 때는 1자리 수가 끝이므로 continue 시켜주었다.

행과 열의 등차를 각 a,b 라는 변수에 저장했고, 등차를 고려한 현재 숫자를 저장하기 위한 cur 변수를 설정했다.

등차대로 증가 혹은 감소하다가 입력값의 범위를 벗어나지 않게끔 while문에 조건을 설정했다.

제곱수인지 체크하는 함수는 간단하게 현재 숫자에 루트를 씌운 값에 제곱을 한 값과 원래 값이 같은지 체크하는 check 함수로 만들었다.

어느정도 구현이 되었다고 생각하여 실행시켰으나 여전히 답은 틀렸는데

원인은 내가 구현한 코드는 등차대로 배열의 끝까지 가고 나서야 제곱수인지 체크한다는 것이었다.
예를 들면 12638 에서 현재 위치가 1이고 행의 등차가 2라고 하면 168이 제곱수인지만 체크하고 16이 제곱수인지는 체크하지 않는다는 것이다.
         23456

이거 하나를 제대로 찾지 못해 이번에도 오랜 시간을 투자했고 힘들게 원인을 찾아내 정답을 맞출 수 있었다.
